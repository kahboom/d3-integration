{
  "id": "i-LqgWwikkSRnC8QArBTCz",
  "version": 2,
  "createdAt": 1571645862083,
  "updatedAt": 1572013504721,
  "tags": [
    "sql"
  ],
  "name": "ext-test",
  "flows": [
    {
      "id": "-LqgWf2fy2pYzAJ2kA3P",
      "tags": [
        "5"
      ],
      "steps": [
        {
          "id": "-LqgWjzBy2pYzAJ2kA3P",
          "configuredProperties": {
            "isRaiseErrorOnNotFound": "false",
            "schedulerExpression": "60000",
            "query": "select * from todo"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "sql-start-connector",
            "name": "Periodic SQL invocation",
            "description": "Periodically invoke SQL to obtain data.",
            "descriptor": {
              "inputDataShape": {
                "kind": "none",
                "type": "SQL_PARAM_IN"
              },
              "outputDataShape": {
                "name": "SQL Result",
                "description": "Result of SQL [select * from todo]",
                "kind": "json-schema",
                "type": "SQL_PARAM_OUT",
                "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}}",
                "metadata": {
                  "variant": "collection"
                }
              },
              "propertyDefinitionSteps": [
                {
                  "name": "SQL statement",
                  "properties": {
                    "isRaiseErrorOnNotFound": {
                      "order": 3,
                      "deprecated": false,
                      "displayName": "Raise NotFoundError",
                      "group": "consumer",
                      "javaType": "java.lang.Boolean",
                      "kind": "parameter",
                      "labelHint": "Raise NotFoundError if no records are inserted, updated, selected or deleted",
                      "required": false,
                      "secret": false,
                      "type": "boolean"
                    },
                    "schedulerExpression": {
                      "order": 2,
                      "defaultValue": "60000",
                      "deprecated": false,
                      "displayName": "Period",
                      "group": "consumer",
                      "javaType": "long",
                      "kind": "parameter",
                      "labelHint": "Delay between scheduling (executing).",
                      "required": false,
                      "secret": false,
                      "type": "duration"
                    },
                    "query": {
                      "order": 1,
                      "defaultValue": "select * from todo",
                      "deprecated": false,
                      "displayName": "SQL statement",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "path",
                      "labelHint": "SQL statement to be executed.",
                      "required": true,
                      "secret": false,
                      "type": "text"
                    }
                  }
                }
              ],
              "componentScheme": "sql",
              "connectorCustomizers": [
                "io.syndesis.connector.sql.customizer.SqlStartConnectorCustomizer"
              ]
            },
            "tags": [
              "dynamic"
            ],
            "actionType": "connector",
            "pattern": "From"
          },
          "connection": {
            "uses": 3,
            "id": "5",
            "tags": [
              "sampledb"
            ],
            "name": "PostgresDB",
            "configuredProperties": {
              "password": "Â»ENC:fd335715bd2b7e7aa0a5051eb7909cd1160f0cdbff8bb70046b7c5e9670d6132ef0831279d03c83d67711562a2673070",
              "schema": "sampledb",
              "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
              "user": "sampledb"
            },
            "connector": {
              "id": "sql",
              "version": 13,
              "actions": [
                {
                  "id": "sql-connector",
                  "name": "Invoke SQL",
                  "description": "Invoke SQL to obtain, store, update, or delete data.",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "json-schema"
                    },
                    "outputDataShape": {
                      "kind": "json-schema"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "SQL statement",
                        "properties": {
                          "query": {
                            "order": 1,
                            "deprecated": false,
                            "displayName": "SQL statement",
                            "group": "common",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                            "placeholder": "for example ':#MYPARAMNAME'",
                            "required": true,
                            "secret": false,
                            "type": "dataList"
                          },
                          "batch": {
                            "order": 2,
                            "defaultValue": "false",
                            "deprecated": false,
                            "displayName": "Batch update",
                            "group": "common",
                            "javaType": "java.lang.Boolean",
                            "kind": "property",
                            "labelHint": "Use prepared statements for INSERT, UPDATE, DELETE in order to update multiple rows with batch update.",
                            "required": false,
                            "secret": false,
                            "type": "boolean"
                          },
                          "raiseErrorOnNotFound": {
                            "order": 3,
                            "defaultValue": "false",
                            "deprecated": false,
                            "displayName": "Raise error when record not found",
                            "group": "common",
                            "javaType": "java.lang.Boolean",
                            "kind": "property",
                            "labelHint": "Error when no records are selected, updated or deleted",
                            "required": false,
                            "secret": false,
                            "type": "boolean"
                          }
                        },
                        "description": "Enter a SQL statement that starts with INSERT, SELECT, UPDATE or DELETE."
                      }
                    ],
                    "componentScheme": "sql",
                    "connectorCustomizers": [
                      "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
                    ],
                    "standardizedErrors": [
                      {
                        "displayName": "SqlDataAccessError",
                        "name": "SQL_DATA_ACCESS_ERROR"
                      },
                      {
                        "displayName": "SqlEntityNotFoundError",
                        "name": "SQL_ENTITY_NOT_FOUND_ERROR"
                      },
                      {
                        "displayName": "SqlConnectorError",
                        "name": "SQL_CONNECTOR_ERROR"
                      }
                    ]
                  },
                  "tags": [
                    "dynamic"
                  ],
                  "actionType": "connector",
                  "pattern": "To"
                },
                {
                  "id": "sql-start-connector",
                  "name": "Periodic SQL invocation",
                  "description": "Periodically invoke SQL to obtain data.",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "json-schema"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "SQL statement",
                        "properties": {
                          "query": {
                            "order": 1,
                            "deprecated": false,
                            "displayName": "SQL statement",
                            "group": "common",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "SQL statement to be executed.",
                            "required": true,
                            "secret": false,
                            "type": "dataList"
                          },
                          "schedulerExpression": {
                            "order": 2,
                            "defaultValue": "60000",
                            "deprecated": false,
                            "displayName": "Period",
                            "group": "consumer",
                            "javaType": "long",
                            "kind": "parameter",
                            "labelHint": "Delay between scheduling (executing).",
                            "required": false,
                            "secret": false,
                            "type": "duration"
                          },
                          "isRaiseErrorOnNotFound": {
                            "order": 3,
                            "deprecated": false,
                            "displayName": "Raise NotFoundError",
                            "group": "consumer",
                            "javaType": "java.lang.Boolean",
                            "kind": "parameter",
                            "labelHint": "Raise NotFoundError if no records are inserted, updated, selected or deleted",
                            "required": false,
                            "secret": false,
                            "type": "boolean"
                          }
                        },
                        "description": "Enter a SQL statement that returns results, such as SELECT."
                      }
                    ],
                    "componentScheme": "sql",
                    "connectorCustomizers": [
                      "io.syndesis.connector.sql.customizer.SqlStartConnectorCustomizer"
                    ]
                  },
                  "tags": [
                    "dynamic"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "sql-stored-connector",
                  "name": "Invoke stored procedure",
                  "description": "Invoke a stored procedure.",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "json-schema"
                    },
                    "outputDataShape": {
                      "kind": "json-schema"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "Procedure name",
                        "properties": {
                          "procedureName": {
                            "componentProperty": true,
                            "deprecated": false,
                            "displayName": "Procedure name",
                            "group": "common",
                            "javaType": "java.lang.String",
                            "kind": "property",
                            "labelHint": "Name of the stored procedure.",
                            "required": false,
                            "secret": false,
                            "type": "select"
                          },
                          "template": {
                            "componentProperty": false,
                            "deprecated": false,
                            "displayName": "Template",
                            "group": "producer",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "Stored procedure template to perform.",
                            "required": false,
                            "secret": false,
                            "type": "hidden"
                          }
                        },
                        "description": "Select the stored procedure."
                      }
                    ],
                    "componentScheme": "sql-stored",
                    "connectorCustomizers": [
                      "io.syndesis.connector.sql.customizer.SqlStoredConnectorCustomizer"
                    ]
                  },
                  "tags": [
                    "dynamic"
                  ],
                  "actionType": "connector",
                  "pattern": "To"
                },
                {
                  "id": "sql-stored-start-connector",
                  "name": "Periodic stored procedure invocation",
                  "description": "Periodically invoke a stored procedure.",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "json-schema"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "Procedure name",
                        "properties": {
                          "procedureName": {
                            "componentProperty": true,
                            "deprecated": false,
                            "displayName": "Procedure name",
                            "group": "producer",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "Name of the stored procedure.",
                            "required": true,
                            "secret": false,
                            "type": "select"
                          },
                          "schedulerExpression": {
                            "defaultValue": "60000",
                            "deprecated": false,
                            "displayName": "Period",
                            "group": "consumer",
                            "javaType": "long",
                            "kind": "parameter",
                            "labelHint": "Delay between scheduling (executing).",
                            "required": false,
                            "secret": false,
                            "type": "duration"
                          },
                          "template": {
                            "componentProperty": false,
                            "deprecated": false,
                            "displayName": "Template",
                            "group": "producer",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "Stored Procedure template to perform.",
                            "required": true,
                            "secret": false,
                            "type": "hidden"
                          }
                        },
                        "description": "Select the stored procedure."
                      }
                    ],
                    "componentScheme": "sql-stored",
                    "connectorCustomizers": [
                      "io.syndesis.connector.sql.customizer.SqlStartStoredConnectorCustomizer"
                    ]
                  },
                  "tags": [
                    "dynamic"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                }
              ],
              "tags": [
                "verifier"
              ],
              "name": "Database",
              "properties": {
                "password": {
                  "order": 3,
                  "componentProperty": true,
                  "deprecated": false,
                  "displayName": "Password",
                  "group": "security",
                  "javaType": "java.lang.String",
                  "kind": "property",
                  "label": "common,security",
                  "labelHint": "Password for the database connection.",
                  "required": true,
                  "secret": true,
                  "type": "string"
                },
                "schema": {
                  "order": 4,
                  "componentProperty": true,
                  "deprecated": false,
                  "displayName": "Schema",
                  "group": "common",
                  "javaType": "java.lang.String",
                  "kind": "property",
                  "label": "common",
                  "labelHint": "Database schema.",
                  "required": false,
                  "secret": false,
                  "type": "string"
                },
                "url": {
                  "order": 1,
                  "componentProperty": true,
                  "deprecated": false,
                  "displayName": "Connection URL",
                  "group": "common",
                  "javaType": "java.lang.String",
                  "kind": "property",
                  "labelHint": "JDBC URL of the database.",
                  "required": true,
                  "secret": false,
                  "type": "string"
                },
                "user": {
                  "order": 2,
                  "componentProperty": true,
                  "deprecated": false,
                  "displayName": "Username",
                  "group": "common",
                  "javaType": "java.lang.String",
                  "kind": "property",
                  "labelHint": "Username for the database connection.",
                  "required": true,
                  "secret": false,
                  "type": "string"
                }
              },
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-sql:1.9-SNAPSHOT"
                },
                {
                  "type": "EXTENSION_TAG",
                  "id": "jdbc-driver"
                }
              ],
              "description": "Subscribe for and publish messages.",
              "icon": "assets:sql.svg",
              "connectorCustomizers": [
                "io.syndesis.connector.sql.customizer.DataSourceCustomizer"
              ]
            },
            "connectorId": "sql",
            "icon": "assets:sql.svg",
            "description": "Connection to SampleDB",
            "isDerived": false
          },
          "stepKind": "endpoint"
        },
        {
          "id": "-LqgWp9Ay2pYzAJ2kA3Q",
          "metadata": {
            "configured": "true"
          },
          "action": {
            "descriptor": {
              "inputDataShape": {
                "kind": "none",
                "type": "SQL_PARAM_IN"
              },
              "outputDataShape": {
                "name": "SQL Result",
                "description": "Result of SQL [select * from todo]",
                "kind": "json-schema",
                "type": "SQL_PARAM_OUT",
                "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}",
                "metadata": {
                  "variant": "element"
                },
                "variants": [
                  {
                    "name": "SQL Result",
                    "description": "Result of SQL [select * from todo]",
                    "kind": "json-schema",
                    "type": "SQL_PARAM_OUT",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true},\"task\":{\"type\":\"string\",\"required\":true},\"completed\":{\"type\":\"integer\",\"required\":true}}}}",
                    "metadata": {
                      "variant": "collection"
                    }
                  }
                ]
              }
            },
            "actionType": "step"
          },
          "stepKind": "split",
          "name": "Split"
        },
        {
          "id": "-LqgWufDy2pYzAJ2kA3Q",
          "configuredProperties": {
            "atlasmapping": "{\"AtlasMapping\":{\"jsonType\":\"io.atlasmap.v2.AtlasMapping\",\"dataSource\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LqgWp9Ay2pYzAJ2kA3Q\",\"uri\":\"atlas:json:-LqgWp9Ay2pYzAJ2kA3Q\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LqgWnTSy2pYzAJ2kA3P\",\"uri\":\"atlas:json:-LqgWnTSy2pYzAJ2kA3P\",\"dataSourceType\":\"TARGET\",\"template\":null}],\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.846589\",\"inputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"completed\",\"path\":\"/completed\",\"fieldType\":\"INTEGER\",\"docId\":\"-LqgWp9Ay2pYzAJ2kA3Q\",\"userCreated\":false}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"lead_status\",\"path\":\"/lead_status\",\"fieldType\":\"STRING\",\"docId\":\"-LqgWnTSy2pYzAJ2kA3P\",\"userCreated\":false}]},{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.632126\",\"inputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"id\",\"path\":\"/id\",\"fieldType\":\"INTEGER\",\"docId\":\"-LqgWp9Ay2pYzAJ2kA3Q\",\"userCreated\":false}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"company\",\"path\":\"/company\",\"fieldType\":\"STRING\",\"docId\":\"-LqgWnTSy2pYzAJ2kA3P\",\"userCreated\":false}]},{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.364449\",\"inputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"task\",\"path\":\"/task\",\"fieldType\":\"STRING\",\"docId\":\"-LqgWp9Ay2pYzAJ2kA3Q\",\"userCreated\":false}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"first_and_last_name\",\"path\":\"/first_and_last_name\",\"fieldType\":\"STRING\",\"docId\":\"-LqgWnTSy2pYzAJ2kA3P\",\"userCreated\":false}]}]},\"name\":\"UI.872688\",\"lookupTables\":{\"lookupTable\":[]},\"constants\":{\"constant\":[]},\"properties\":{\"property\":[]}}}"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "descriptor": {
              "inputDataShape": {
                "name": "All preceding outputs",
                "kind": "any"
              },
              "outputDataShape": {
                "name": "add_lead Parameter",
                "description": "Parameters of Stored Procedure 'add_lead'",
                "kind": "json-schema",
                "type": "add_lead_IN",
                "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}"
              }
            },
            "actionType": "step"
          },
          "stepKind": "mapper",
          "name": "Data Mapper"
        },
        {
          "id": "-Ls2IaPE3fXgwx-wUYeP",
          "configuredProperties": {
            "contextLoggingEnabled": "false",
            "bodyLoggingEnabled": "false"
          },
          "metadata": {
            "configured": "true"
          },
          "stepKind": "log",
          "name": "Log"
        },
        {
          "id": "-LqgWnTSy2pYzAJ2kA3P",
          "configuredProperties": {
            "procedureName": "add_lead"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "sql-stored-connector",
            "name": "Invoke stored procedure",
            "description": "Invoke a stored procedure.",
            "descriptor": {
              "inputDataShape": {
                "name": "add_lead Parameter",
                "description": "Parameters of Stored Procedure 'add_lead'",
                "kind": "json-schema",
                "type": "add_lead_IN",
                "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"add_lead_IN\",\"properties\":{\"first_and_last_name\":{\"type\":\"string\",\"required\":true},\"company\":{\"type\":\"string\",\"required\":true},\"phone\":{\"type\":\"string\",\"required\":true},\"email\":{\"type\":\"string\",\"required\":true},\"lead_source\":{\"type\":\"string\",\"required\":true},\"lead_status\":{\"type\":\"string\",\"required\":true},\"rating\":{\"type\":\"string\",\"required\":true}}}"
              },
              "outputDataShape": {
                "kind": "none",
                "type": "add_lead_OUT"
              },
              "propertyDefinitionSteps": [
                {
                  "name": "Procedure name",
                  "properties": {
                    "procedureName": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Procedure name",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "labelHint": "Name of the stored procedure.",
                      "required": false,
                      "secret": false,
                      "type": "select",
                      "enum": [
                        {
                          "label": "add_lead",
                          "value": "add_lead"
                        },
                        {
                          "label": "create_lead",
                          "value": "create_lead"
                        }
                      ]
                    },
                    "template": {
                      "componentProperty": false,
                      "defaultValue": "add_lead(VARCHAR ${body[first_and_last_name]}, VARCHAR ${body[company]}, VARCHAR ${body[phone]}, VARCHAR ${body[email]}, VARCHAR ${body[lead_source]}, VARCHAR ${body[lead_status]}, VARCHAR ${body[rating]})",
                      "deprecated": false,
                      "displayName": "Template",
                      "group": "producer",
                      "javaType": "java.lang.String",
                      "kind": "path",
                      "labelHint": "Stored procedure template to perform.",
                      "required": false,
                      "secret": false,
                      "type": "hidden"
                    }
                  }
                }
              ],
              "componentScheme": "sql-stored",
              "connectorCustomizers": [
                "io.syndesis.connector.sql.customizer.SqlStoredConnectorCustomizer"
              ]
            },
            "tags": [
              "dynamic"
            ],
            "actionType": "connector",
            "pattern": "To"
          },
          "connection": {
            "uses": 3,
            "id": "5",
            "tags": [
              "sampledb"
            ],
            "name": "PostgresDB",
            "configuredProperties": {
              "password": "Â»ENC:fd335715bd2b7e7aa0a5051eb7909cd1160f0cdbff8bb70046b7c5e9670d6132ef0831279d03c83d67711562a2673070",
              "schema": "sampledb",
              "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
              "user": "sampledb"
            },
            "connector": {
              "id": "sql",
              "version": 13,
              "actions": [
                {
                  "id": "sql-connector",
                  "name": "Invoke SQL",
                  "description": "Invoke SQL to obtain, store, update, or delete data.",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "json-schema"
                    },
                    "outputDataShape": {
                      "kind": "json-schema"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "SQL statement",
                        "properties": {
                          "query": {
                            "order": 1,
                            "deprecated": false,
                            "displayName": "SQL statement",
                            "group": "common",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                            "placeholder": "for example ':#MYPARAMNAME'",
                            "required": true,
                            "secret": false,
                            "type": "dataList"
                          },
                          "batch": {
                            "order": 2,
                            "defaultValue": "false",
                            "deprecated": false,
                            "displayName": "Batch update",
                            "group": "common",
                            "javaType": "java.lang.Boolean",
                            "kind": "property",
                            "labelHint": "Use prepared statements for INSERT, UPDATE, DELETE in order to update multiple rows with batch update.",
                            "required": false,
                            "secret": false,
                            "type": "boolean"
                          },
                          "raiseErrorOnNotFound": {
                            "order": 3,
                            "defaultValue": "false",
                            "deprecated": false,
                            "displayName": "Raise error when record not found",
                            "group": "common",
                            "javaType": "java.lang.Boolean",
                            "kind": "property",
                            "labelHint": "Error when no records are selected, updated or deleted",
                            "required": false,
                            "secret": false,
                            "type": "boolean"
                          }
                        },
                        "description": "Enter a SQL statement that starts with INSERT, SELECT, UPDATE or DELETE."
                      }
                    ],
                    "componentScheme": "sql",
                    "connectorCustomizers": [
                      "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
                    ],
                    "standardizedErrors": [
                      {
                        "displayName": "SqlDataAccessError",
                        "name": "SQL_DATA_ACCESS_ERROR"
                      },
                      {
                        "displayName": "SqlEntityNotFoundError",
                        "name": "SQL_ENTITY_NOT_FOUND_ERROR"
                      },
                      {
                        "displayName": "SqlConnectorError",
                        "name": "SQL_CONNECTOR_ERROR"
                      }
                    ]
                  },
                  "tags": [
                    "dynamic"
                  ],
                  "actionType": "connector",
                  "pattern": "To"
                },
                {
                  "id": "sql-start-connector",
                  "name": "Periodic SQL invocation",
                  "description": "Periodically invoke SQL to obtain data.",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "json-schema"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "SQL statement",
                        "properties": {
                          "query": {
                            "order": 1,
                            "deprecated": false,
                            "displayName": "SQL statement",
                            "group": "common",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "SQL statement to be executed.",
                            "required": true,
                            "secret": false,
                            "type": "dataList"
                          },
                          "schedulerExpression": {
                            "order": 2,
                            "defaultValue": "60000",
                            "deprecated": false,
                            "displayName": "Period",
                            "group": "consumer",
                            "javaType": "long",
                            "kind": "parameter",
                            "labelHint": "Delay between scheduling (executing).",
                            "required": false,
                            "secret": false,
                            "type": "duration"
                          },
                          "isRaiseErrorOnNotFound": {
                            "order": 3,
                            "deprecated": false,
                            "displayName": "Raise NotFoundError",
                            "group": "consumer",
                            "javaType": "java.lang.Boolean",
                            "kind": "parameter",
                            "labelHint": "Raise NotFoundError if no records are inserted, updated, selected or deleted",
                            "required": false,
                            "secret": false,
                            "type": "boolean"
                          }
                        },
                        "description": "Enter a SQL statement that returns results, such as SELECT."
                      }
                    ],
                    "componentScheme": "sql",
                    "connectorCustomizers": [
                      "io.syndesis.connector.sql.customizer.SqlStartConnectorCustomizer"
                    ]
                  },
                  "tags": [
                    "dynamic"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "sql-stored-connector",
                  "name": "Invoke stored procedure",
                  "description": "Invoke a stored procedure.",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "json-schema"
                    },
                    "outputDataShape": {
                      "kind": "json-schema"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "Procedure name",
                        "properties": {
                          "procedureName": {
                            "componentProperty": true,
                            "deprecated": false,
                            "displayName": "Procedure name",
                            "group": "common",
                            "javaType": "java.lang.String",
                            "kind": "property",
                            "labelHint": "Name of the stored procedure.",
                            "required": false,
                            "secret": false,
                            "type": "select"
                          },
                          "template": {
                            "componentProperty": false,
                            "deprecated": false,
                            "displayName": "Template",
                            "group": "producer",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "Stored procedure template to perform.",
                            "required": false,
                            "secret": false,
                            "type": "hidden"
                          }
                        },
                        "description": "Select the stored procedure."
                      }
                    ],
                    "componentScheme": "sql-stored",
                    "connectorCustomizers": [
                      "io.syndesis.connector.sql.customizer.SqlStoredConnectorCustomizer"
                    ]
                  },
                  "tags": [
                    "dynamic"
                  ],
                  "actionType": "connector",
                  "pattern": "To"
                },
                {
                  "id": "sql-stored-start-connector",
                  "name": "Periodic stored procedure invocation",
                  "description": "Periodically invoke a stored procedure.",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "json-schema"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "Procedure name",
                        "properties": {
                          "procedureName": {
                            "componentProperty": true,
                            "deprecated": false,
                            "displayName": "Procedure name",
                            "group": "producer",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "Name of the stored procedure.",
                            "required": true,
                            "secret": false,
                            "type": "select"
                          },
                          "schedulerExpression": {
                            "defaultValue": "60000",
                            "deprecated": false,
                            "displayName": "Period",
                            "group": "consumer",
                            "javaType": "long",
                            "kind": "parameter",
                            "labelHint": "Delay between scheduling (executing).",
                            "required": false,
                            "secret": false,
                            "type": "duration"
                          },
                          "template": {
                            "componentProperty": false,
                            "deprecated": false,
                            "displayName": "Template",
                            "group": "producer",
                            "javaType": "java.lang.String",
                            "kind": "path",
                            "labelHint": "Stored Procedure template to perform.",
                            "required": true,
                            "secret": false,
                            "type": "hidden"
                          }
                        },
                        "description": "Select the stored procedure."
                      }
                    ],
                    "componentScheme": "sql-stored",
                    "connectorCustomizers": [
                      "io.syndesis.connector.sql.customizer.SqlStartStoredConnectorCustomizer"
                    ]
                  },
                  "tags": [
                    "dynamic"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                }
              ],
              "tags": [
                "verifier"
              ],
              "name": "Database",
              "properties": {
                "password": {
                  "order": 3,
                  "componentProperty": true,
                  "deprecated": false,
                  "displayName": "Password",
                  "group": "security",
                  "javaType": "java.lang.String",
                  "kind": "property",
                  "label": "common,security",
                  "labelHint": "Password for the database connection.",
                  "required": true,
                  "secret": true,
                  "type": "string"
                },
                "schema": {
                  "order": 4,
                  "componentProperty": true,
                  "deprecated": false,
                  "displayName": "Schema",
                  "group": "common",
                  "javaType": "java.lang.String",
                  "kind": "property",
                  "label": "common",
                  "labelHint": "Database schema.",
                  "required": false,
                  "secret": false,
                  "type": "string"
                },
                "url": {
                  "order": 1,
                  "componentProperty": true,
                  "deprecated": false,
                  "displayName": "Connection URL",
                  "group": "common",
                  "javaType": "java.lang.String",
                  "kind": "property",
                  "labelHint": "JDBC URL of the database.",
                  "required": true,
                  "secret": false,
                  "type": "string"
                },
                "user": {
                  "order": 2,
                  "componentProperty": true,
                  "deprecated": false,
                  "displayName": "Username",
                  "group": "common",
                  "javaType": "java.lang.String",
                  "kind": "property",
                  "labelHint": "Username for the database connection.",
                  "required": true,
                  "secret": false,
                  "type": "string"
                }
              },
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-sql:1.9-SNAPSHOT"
                },
                {
                  "type": "EXTENSION_TAG",
                  "id": "jdbc-driver"
                }
              ],
              "description": "Subscribe for and publish messages.",
              "icon": "assets:sql.svg",
              "connectorCustomizers": [
                "io.syndesis.connector.sql.customizer.DataSourceCustomizer"
              ]
            },
            "connectorId": "sql",
            "icon": "assets:sql.svg",
            "description": "Connection to SampleDB",
            "isDerived": false
          },
          "stepKind": "endpoint"
        }
      ],
      "type": "PRIMARY"
    }
  ],
  "currentState": "Unpublished",
  "targetState": "Published",
  "deployments": [
    {
      "id": "i-LqgWwikkSRnC8QArBTCz:1",
      "version": 1,
      "createdAt": 1572013505194,
      "updatedAt": 1572013505592,
      "userId": "kahboom",
      "currentState": "Unpublished",
      "targetState": "Published",
      "statusMessage": "User has currently 1 deployments, while the maximum allowed number is 1."
    }
  ],
  "board": {
    "id": "i-LrhOA3YOE4yAgQlQ2Guz",
    "metadata": {
      "integration-id": "i-LqgWwikkSRnC8QArBTCz",
      "integration-version": "2"
    },
    "messages": [
      {
        "metadata": {
          "flow": "-LqgWf2fy2pYzAJ2kA3P",
          "step": "-LqgWjzBy2pYzAJ2kA3P"
        },
        "level": "INFO",
        "code": "SYNDESIS001"
      }
    ],
    "createdAt": 1571645862179,
    "updatedAt": 1572013505007,
    "targetResourceId": "i-LqgWwikkSRnC8QArBTCz",
    "notices": 1,
    "warnings": 0,
    "errors": 0
  },
  "isDraft": true
}